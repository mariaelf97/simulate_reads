ISOLATES = [i for i in open("/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/mixed_samples_diff_cov/isolates.txt").read().split('\n') if len(i) >0]
ABUNDANCES = [i for i in open("/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/mixed_samples_diff_cov/abundances.txt").read().split('\n') if len(i) >0]

#ISOLATES = [i for i in open("/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/mixed_samples_diff_cov/comb_names.txt").read().split('\n') if len(i) >0]
#ABUNDANCES = [i for i in open("/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/mixed_samples/abundances.txt").read().split('\n') if len(i) >0]
#ISOLATES = [filename.replace(".fastq", "") for filename in ISOLATES]
rule all:
    input:
        expand("/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/all_reads.sam", isolate = ISOLATES, abundance = ABUNDANCES),
        expand("/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/all_reads.bam", isolate = ISOLATES, abundance = ABUNDANCES),
        expand("/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/all_reads_sorted.bam", isolate = ISOLATES, abundance = ABUNDANCES),
        expand("/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/all_reads_sorted.bam.bai",  isolate = ISOLATES, abundance = ABUNDANCES),
        expand("/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/trimmed_all_reads.bam", isolate = ISOLATES, abundance = ABUNDANCES),
        expand("/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/{isolate}_{abundance}.vcf", isolate = ISOLATES, abundance = ABUNDANCES),
        expand("/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/depths.tsv", isolate = ISOLATES, abundance = ABUNDANCES),
        expand("/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/{isolate}_{abundance}_freyja_demix_freschi", isolate = ISOLATES, abundance = ABUNDANCES)

rule minimap2_sam:
    input:
        target="/home/mahmadi/tb_seqs/H37Rv/H37Rv.fasta",  # can be either genome index or genome fasta
        query="/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/{isolate}/{abundance}/reads_1.fastq"
    output:
        "/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/all_reads.sam"
    conda:
        "minimap"
    shell:
        """minimap2 -ax sr {input.target} {input.query} > {output} """
rule sam2bam:
    input:
        "/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/all_reads.sam"
    output:
        "/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/all_reads.bam"
    conda:
        "freyja"
    shell:
        """samtools view -bS {input} > {output} """

rule sort_bam:
    input:
        "/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/all_reads.bam"
    output:
        "/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/all_reads_sorted.bam"
    conda:
        "freyja"
    shell:
        """samtools sort -o {output} {input} """

rule index_bam:
    input:
        "/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/all_reads_sorted.bam"
    output:
        "/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/all_reads_sorted.bam.bai"
    conda:
        "freyja"
    shell:
        """samtools index {input} """
rule remove_adapters:
    input:
        bam_file="/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/all_reads_sorted.bam",
        primer="/home/mahmadi/tb_seqs/primers/primer_v2.bed"
    output:
        "/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/trimmed_all_reads.bam"
    conda:
        "freyja"
    params:
       pfx = "/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/trimmed_all_reads"
    shell:
        """ivar trim -b {input.primer} -p {params.pfx} -i {input.bam_file} -q 15 -m 50 -s 4 -e"""
rule sort_index:
    input:
        "/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/trimmed_all_reads.bam"
    output:
        "/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/trimmed_all_reads_sorted.bam"
    conda:
        "freyja"
    shell:
        """samtools sort -o {output} {input} && samtools index {output} """
rule generate_depth:
    input:
        bam_file="/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/trimmed_all_reads_sorted.bam",
        reference="/home/mahmadi/tb_seqs/H37Rv/H37Rv.fasta"
    output:
        depths="/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/depths.tsv"
    conda:
        "freyja"
    shell:
        """ samtools mpileup -aa -A -d 600000 -Q 20 -q 0 -B -f {input.reference} {input.bam_file} | cut -f1-4 > {output}"""

rule run_lofreq:
    input:
        bam_file="/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/trimmed_all_reads_sorted.bam",
        reference="/home/mahmadi/tb_seqs/H37Rv/H37Rv.fasta"
    output:
        "/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/{isolate}_{abundance}.vcf"
    conda:
        "lofreq"
    shell:
        """lofreq call -f {input.reference} -a 1 -b 1 -o {output} {input.bam_file}"""
rule run_demix:
    input:
        variants="/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/{isolate}_{abundance}.vcf",
        depths="/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/depths.tsv",
        barcodes="/home/mahmadi/tb_seqs/lineage_barcodes/freschi_hier_binary_matrix.csv"
    output:
        "/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/primer_v2/pure_samples/{isolate}/{abundance}/{isolate}_{abundance}_freyja_demix_freschi"
    conda:
        "freyja"
    shell:
        """freyja demix {input.variants} {input.depths} --output {output} --barcodes {input.barcodes}"""




































