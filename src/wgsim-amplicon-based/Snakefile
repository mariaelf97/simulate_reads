ISOLATES = [i for i in open("/home/mahmadi/tb_seqs/assemblies/long_read_assemblies/isolates.txt").read().split('\n') if len(i) >0]
ABUNDANCES = [i for i in open("/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/abundances.txt").read().split('\n') if len(i) >0]

rule all:
    input:
        expand("/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/{isolate}/mixed_samples_{abundance}/reads_1.fastq",zip, isolate= ISOLATES, abundance = ABUNDANCES),
        expand("/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/{isolate}/mixed_samples_{abundance}/reads_2.fastq",zip, isolate= ISOLATES, abundance = ABUNDANCES)


rule simulate_reads:
    input:
        "/home/mahmadi/tb_seqs/seq_simulation/amplicons/alignment_approach/{isolate}/all_amplicons.fasta",
    output:
       output1="/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/{isolate}/mixed_samples_{abundance}/reads_1.fastq",
       output2="/home/mahmadi/tb_seqs/seq_simulation/amplicon_read_simulations/amplicon_alignment_wgsim/{isolate}/mixed_samples_{abundance}/reads_2.fastq"
    conda:
        "wgsim"
    shell:
        """wgsim -1 400 -2 400 -r 0.001 -R 0.001 -X 0 -e 0.001 -N {wildcards.abundance} {input} {output.output1} {output.output2}"""





























